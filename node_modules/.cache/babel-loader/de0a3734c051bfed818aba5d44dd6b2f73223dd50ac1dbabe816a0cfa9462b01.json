{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { getAnswer, submit } from \"@/server/chatbots\";\nexport default {\n  name: \"chatbots-cpn\",\n  mounted() {\n    this.scrollBox = document.querySelector(\".chatbox\");\n  },\n  data() {\n    return {\n      isGetAnswerLoading: false,\n      isSubmitLoading: false,\n      isFirstAnswer: false,\n      isEmpty: false,\n      placeholderText: \"您可以随便问我一些问题\",\n      texts: \"\",\n      data: [],\n      scrollBox: null,\n      isAnswerChange: false,\n      answer: \"\",\n      copyAnswer: \"\",\n      currentChangeIndex: 0\n    };\n  },\n  methods: {\n    async submit() {\n      if (this.data.length === 0) {\n        this.$message(\"无任何数据需要提交\");\n        return;\n      }\n      this.isSubmitLoading = true;\n      try {\n        const {\n          data\n        } = await submit(this.data);\n        if (data.code === 200) {\n          this.$message({\n            message: \"提交成功！\",\n            type: \"success\"\n          });\n          this.data = [];\n        }\n      } catch (error) {\n        console.log(error);\n        this.$message.error(\"提交失败！\");\n      }\n      this.isSubmitLoading = false;\n    },\n    changeComplete() {\n      if (!this.isFirstAnswer) {\n        this.data[this.currentChangeIndex].content = this.answer;\n        this.isAnswerChange = false;\n      } else {\n        this.data.push({\n          role: \"assistant\",\n          content: this.answer\n        });\n        this.isAnswerChange = false;\n        this.isFirstAnswer = false;\n        this.$nextTick(() => {\n          this.scrollToBottom();\n        });\n      }\n    },\n    resetAnswer() {\n      if (!this.isFirstAnswer) {\n        this.answer = this.data[this.currentChangeIndex].content;\n      } else {\n        this.answer = this.copyAnswer;\n      }\n    },\n    changeAnswer(index) {\n      this.isAnswerChange = true;\n      this.answer = this.data[index].content;\n      this.currentChangeIndex = index;\n    },\n    async getAnswer() {\n      if (this.texts.trim() === \"\") {\n        this.placeholderText = \"请写一些话吧\", this.isEmpty = true;\n        return;\n      } else if (this.data.length >= 16) {\n        this.$message({\n          message: \"对话已超过8轮，提交审核后再提问吧\",\n          type: \"warning\"\n        });\n        return;\n      }\n      this.isGetAnswerLoading = true;\n      try {\n        const {\n          data\n        } = await getAnswer(this.texts);\n        // console.log(data);\n        const length = data.response.length;\n        if (this.data.length === 0) {\n          this.data = data.response.slice(0, length - 1);\n        } else {\n          this.data.push({\n            role: \"user\",\n            content: this.texts\n          });\n        }\n        this.answer = data.response[length - 1].content;\n      } catch (error) {\n        console.log(error);\n        this.$message.error(\"获取回答失败！\");\n        this.isGetAnswerLoading = false;\n        return;\n      }\n      this.$nextTick(() => {\n        this.scrollToBottom();\n      });\n      this.isGetAnswerLoading = false;\n      this.isAnswerChange = true;\n      this.isFirstAnswer = true;\n      this.copyAnswer = this.answer;\n      this.texts = \"\";\n    },\n    scrollToBottom() {\n      this.scrollBox.scrollTop = this.scrollBox.scrollHeight;\n    },\n    inputQuestion() {\n      this.placeholderText = \"您可以随便问我一些问题\", this.isEmpty = false;\n    }\n  }\n};","map":{"version":3,"names":["getAnswer","submit","name","mounted","scrollBox","document","querySelector","data","isGetAnswerLoading","isSubmitLoading","isFirstAnswer","isEmpty","placeholderText","texts","isAnswerChange","answer","copyAnswer","currentChangeIndex","methods","length","$message","code","message","type","error","console","log","changeComplete","content","push","role","$nextTick","scrollToBottom","resetAnswer","changeAnswer","index","trim","response","slice","scrollTop","scrollHeight","inputQuestion"],"sources":["src/views/home/components/chatbots-cpn.vue"],"sourcesContent":["<template>\r\n  <div class=\"bgbox\">\r\n    <div class=\"chatbox\">\r\n      <p class=\"title\">您可以编辑生成的回答</p>\r\n      <div chatBG>\r\n        <transition-group name=\"log\">\r\n        <div class=\"log\" v-for=\"(item, index) in data\" :key=\"index\">\r\n          <img class=\"avatar\" src=\"../../../assets/img/blur-book.jpg\" alt=\"\" />\r\n          <div\r\n            :class=\"{\r\n              chatContentUser: item.role === 'user',\r\n              chatContentBots: item.role === 'assistant',\r\n              chatContent: true,\r\n            }\"\r\n          >\r\n            {{ item.content }}\r\n            <img\r\n              @click=\"changeAnswer(index)\"\r\n              src=\"../../../assets/img/xiugai.png\"\r\n              alt=\"\"\r\n              class=\"changeImg\"\r\n              v-if=\"item.role !== 'user'\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </transition-group>\r\n      </div>\r\n    </div>\r\n    <div class=\"Inputbox\" v-if=\"!isAnswerChange\">\r\n      <input\r\n        :class=\"{ chatInput: true, error: isEmpty }\"\r\n        @input=\"inputQuestion\"\r\n        v-model=\"texts\"\r\n        type=\"text\"\r\n        :placeholder=\"placeholderText\"\r\n      />\r\n      <el-button\r\n        class=\"gptBtn\"\r\n        type=\"primary\"\r\n        @click=\"getAnswer\"\r\n        :loading=\"isGetAnswerLoading\"\r\n        >获取回答</el-button\r\n      >\r\n      <el-button type=\"success\" @click=\"submit\" :loading=\"isSubmitLoading\"\r\n        >提交审核</el-button\r\n      >\r\n    </div>\r\n    <div class=\"answerInput\" v-else>\r\n      <el-input class=\"textarea\" type=\"textarea\" v-model=\"answer\"></el-input>\r\n      <el-button class=\"tBtn\" type=\"success\" @click=\"changeComplete\" round>{{\r\n        isFirstAnswer ? \"确认\" : \"修改完成\"\r\n      }}</el-button>\r\n      <el-button class=\"tBtn\" type=\"danger\" round @click=\"resetAnswer\"\r\n        >重置</el-button\r\n      >\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getAnswer, submit } from \"@/server/chatbots\";\r\nexport default {\r\n  name: \"chatbots-cpn\",\r\n  mounted() {\r\n    this.scrollBox = document.querySelector(\".chatbox\");\r\n  },\r\n  data() {\r\n    return {\r\n      isGetAnswerLoading: false,\r\n      isSubmitLoading: false,\r\n      isFirstAnswer: false,\r\n      isEmpty: false,\r\n      placeholderText: \"您可以随便问我一些问题\",\r\n      texts: \"\",\r\n      data: [],\r\n      scrollBox: null,\r\n      isAnswerChange: false,\r\n      answer: \"\",\r\n      copyAnswer: \"\",\r\n      currentChangeIndex: 0,\r\n    };\r\n  },\r\n  methods: {\r\n    async submit() {\r\n      if (this.data.length === 0) {\r\n        this.$message(\"无任何数据需要提交\");\r\n        return;\r\n      }\r\n      this.isSubmitLoading = true;\r\n      try {\r\n        const { data } = await submit(this.data);\r\n        if (data.code === 200) {\r\n          this.$message({\r\n            message: \"提交成功！\",\r\n            type: \"success\",\r\n          });\r\n          this.data = [];\r\n        }\r\n      } catch (error) {\r\n        console.log(error);\r\n        this.$message.error(\"提交失败！\");\r\n      }\r\n      this.isSubmitLoading = false;\r\n    },\r\n    changeComplete() {\r\n      if (!this.isFirstAnswer) {\r\n        this.data[this.currentChangeIndex].content = this.answer;\r\n        this.isAnswerChange = false;\r\n      } else {\r\n        this.data.push({\r\n          role: \"assistant\",\r\n          content: this.answer,\r\n        });\r\n        this.isAnswerChange = false;\r\n        this.isFirstAnswer = false;\r\n        this.$nextTick(() => {\r\n          this.scrollToBottom();\r\n        });\r\n      }\r\n    },\r\n    resetAnswer() {\r\n      if (!this.isFirstAnswer) {\r\n        this.answer = this.data[this.currentChangeIndex].content;\r\n      } else {\r\n        this.answer = this.copyAnswer;\r\n      }\r\n    },\r\n    changeAnswer(index) {\r\n      this.isAnswerChange = true;\r\n      this.answer = this.data[index].content;\r\n      this.currentChangeIndex = index;\r\n    },\r\n    async getAnswer() {\r\n      if (this.texts.trim() === \"\") {\r\n        (this.placeholderText = \"请写一些话吧\"), (this.isEmpty = true);\r\n        return;\r\n      } else if (this.data.length >= 16) {\r\n        this.$message({\r\n          message: \"对话已超过8轮，提交审核后再提问吧\",\r\n          type: \"warning\",\r\n        });\r\n        return;\r\n      }\r\n      this.isGetAnswerLoading = true;\r\n      try {\r\n        const { data } = await getAnswer(this.texts);\r\n        // console.log(data);\r\n        const length = data.response.length;\r\n        if (this.data.length === 0) {\r\n          this.data = data.response.slice(0, length - 1);\r\n        } else {\r\n          this.data.push({\r\n            role: \"user\",\r\n            content: this.texts,\r\n          });\r\n        }\r\n        this.answer = data.response[length - 1].content;\r\n      } catch (error) {\r\n        console.log(error);\r\n        this.$message.error(\"获取回答失败！\");\r\n        this.isGetAnswerLoading = false;\r\n        return;\r\n      }\r\n      this.$nextTick(() => {\r\n        this.scrollToBottom();\r\n      });\r\n      this.isGetAnswerLoading = false;\r\n      this.isAnswerChange = true;\r\n      this.isFirstAnswer = true;\r\n      this.copyAnswer = this.answer;\r\n      this.texts = \"\";\r\n    },\r\n    scrollToBottom() {\r\n      this.scrollBox.scrollTop = this.scrollBox.scrollHeight;\r\n    },\r\n\r\n    inputQuestion() {\r\n      (this.placeholderText = \"您可以随便问我一些问题\"), (this.isEmpty = false);\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n\r\n.chatbox .title {\r\n  font-size: 22px;\r\n  font-weight: 700;\r\n  margin-left: 30px;\r\n  margin-top: 25px;\r\n}\r\n\r\n.chatBG {\r\n\r\n}\r\n.changeImg {\r\n  width: 20px;\r\n  height: 20px;\r\n  cursor: pointer;\r\n  position: absolute;\r\n  right: 3px;\r\n  bottom: 3px;\r\n}\r\n\r\n.tBtn {\r\n  margin-top: 10px;\r\n  height: 50px;\r\n}\r\n\r\n.textarea {\r\n  width: 800px;\r\n  font-size: 20px;\r\n  height: 100px;\r\n  margin-right: 15px;\r\n}\r\n\r\n/* .textarea .el-textarea__inner {\r\n  height: 100px !important;\r\n} */\r\n\r\n.answerInput {\r\n  display: flex;\r\n  width: 1300px;\r\n  height: 100px;\r\n  margin: 15px;\r\n  margin-top: 60px;\r\n}\r\n\r\n.log {\r\n  display: flex;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.log .chatContent {\r\n  position: relative;\r\n  color: #fff;\r\n  background-color: #10aeff;\r\n  border: 1px solid #10aeff;\r\n  padding: 20px;\r\n  margin-top: 20px;\r\n  margin-left: 10px;\r\n  border-radius: 8px;\r\n  font-size: 20px;\r\n}\r\n\r\n.Inputbox {\r\n  margin-top: 60px;\r\n}\r\n\r\n.log .chatContentUser {\r\n  color: #fff;\r\n  background-color: #10aeff;\r\n  border: 1px solid #10aeff;\r\n}\r\n\r\n.log .chatContentBots {\r\n  color: #000;\r\n  background-color: #fff;\r\n  border: 1px solid #fff;\r\n}\r\n\r\n.log .avatar {\r\n  width: 35px;\r\n  height: 35px;\r\n  border-radius: 50%;\r\n  margin-left: 10px;\r\n}\r\n\r\n.bgbox {\r\n  width: 100%;\r\n  height: 100%;\r\n  padding-left: 15px;\r\n}\r\n\r\n.chatInput {\r\n  width: 800px;\r\n  height: 50px;\r\n  margin-left: 15px;\r\n  padding-left: 30px;\r\n  border: 1px solid #ccc;\r\n  outline: none;\r\n  border-radius: 20px;\r\n  font-size: 20px;\r\n}\r\n\r\n.chatInput::placeholder {\r\n  opacity: 0.5;\r\n}\r\n\r\n.error::placeholder {\r\n  color: red;\r\n}\r\n\r\n.chatInput:focus {\r\n  border: 1px solid skyblue;\r\n  outline: 1px solid skyblue;\r\n}\r\n\r\n.chatbox {\r\n  padding-top: 15px;\r\n  padding-right: 20px;\r\n  margin: 15px;\r\n  min-height: 550px;\r\n  background-color: #fff;\r\n  border-radius: 20px;\r\n}\r\n\r\n.chatbox::-webkit-scrollbar {\r\n  width: 5px;\r\n}\r\n\r\n.chatbox::-webkit-scrollbar-thumb {\r\n  background-color: #ccc;\r\n  border-radius: 4px;\r\n}\r\n\r\n.chatbox::-webkit-scrollbar-track {\r\n  background-color: #f1f1f1;\r\n}\r\n\r\n.gptBtn {\r\n  margin-left: 15px;\r\n}\r\n\r\n.log-enter-active,\r\n.log-leave-active {\r\n  animation: appear 0.5s ease;\r\n}\r\n\r\n@keyframes appear {\r\n  0% {\r\n    opacity: 0;\r\n    transform: translateX(20px) translateY(20px);\r\n  }\r\n}\r\n</style>"],"mappings":";AA4DA,SAAAA,SAAA,EAAAC,MAAA;AACA;EACAC,IAAA;EACAC,QAAA;IACA,KAAAC,SAAA,GAAAC,QAAA,CAAAC,aAAA;EACA;EACAC,KAAA;IACA;MACAC,kBAAA;MACAC,eAAA;MACAC,aAAA;MACAC,OAAA;MACAC,eAAA;MACAC,KAAA;MACAN,IAAA;MACAH,SAAA;MACAU,cAAA;MACAC,MAAA;MACAC,UAAA;MACAC,kBAAA;IACA;EACA;EACAC,OAAA;IACA,MAAAjB,OAAA;MACA,SAAAM,IAAA,CAAAY,MAAA;QACA,KAAAC,QAAA;QACA;MACA;MACA,KAAAX,eAAA;MACA;QACA;UAAAF;QAAA,UAAAN,MAAA,MAAAM,IAAA;QACA,IAAAA,IAAA,CAAAc,IAAA;UACA,KAAAD,QAAA;YACAE,OAAA;YACAC,IAAA;UACA;UACA,KAAAhB,IAAA;QACA;MACA,SAAAiB,KAAA;QACAC,OAAA,CAAAC,GAAA,CAAAF,KAAA;QACA,KAAAJ,QAAA,CAAAI,KAAA;MACA;MACA,KAAAf,eAAA;IACA;IACAkB,eAAA;MACA,UAAAjB,aAAA;QACA,KAAAH,IAAA,MAAAU,kBAAA,EAAAW,OAAA,QAAAb,MAAA;QACA,KAAAD,cAAA;MACA;QACA,KAAAP,IAAA,CAAAsB,IAAA;UACAC,IAAA;UACAF,OAAA,OAAAb;QACA;QACA,KAAAD,cAAA;QACA,KAAAJ,aAAA;QACA,KAAAqB,SAAA;UACA,KAAAC,cAAA;QACA;MACA;IACA;IACAC,YAAA;MACA,UAAAvB,aAAA;QACA,KAAAK,MAAA,QAAAR,IAAA,MAAAU,kBAAA,EAAAW,OAAA;MACA;QACA,KAAAb,MAAA,QAAAC,UAAA;MACA;IACA;IACAkB,aAAAC,KAAA;MACA,KAAArB,cAAA;MACA,KAAAC,MAAA,QAAAR,IAAA,CAAA4B,KAAA,EAAAP,OAAA;MACA,KAAAX,kBAAA,GAAAkB,KAAA;IACA;IACA,MAAAnC,UAAA;MACA,SAAAa,KAAA,CAAAuB,IAAA;QACA,KAAAxB,eAAA,kBAAAD,OAAA;QACA;MACA,gBAAAJ,IAAA,CAAAY,MAAA;QACA,KAAAC,QAAA;UACAE,OAAA;UACAC,IAAA;QACA;QACA;MACA;MACA,KAAAf,kBAAA;MACA;QACA;UAAAD;QAAA,UAAAP,SAAA,MAAAa,KAAA;QACA;QACA,MAAAM,MAAA,GAAAZ,IAAA,CAAA8B,QAAA,CAAAlB,MAAA;QACA,SAAAZ,IAAA,CAAAY,MAAA;UACA,KAAAZ,IAAA,GAAAA,IAAA,CAAA8B,QAAA,CAAAC,KAAA,IAAAnB,MAAA;QACA;UACA,KAAAZ,IAAA,CAAAsB,IAAA;YACAC,IAAA;YACAF,OAAA,OAAAf;UACA;QACA;QACA,KAAAE,MAAA,GAAAR,IAAA,CAAA8B,QAAA,CAAAlB,MAAA,MAAAS,OAAA;MACA,SAAAJ,KAAA;QACAC,OAAA,CAAAC,GAAA,CAAAF,KAAA;QACA,KAAAJ,QAAA,CAAAI,KAAA;QACA,KAAAhB,kBAAA;QACA;MACA;MACA,KAAAuB,SAAA;QACA,KAAAC,cAAA;MACA;MACA,KAAAxB,kBAAA;MACA,KAAAM,cAAA;MACA,KAAAJ,aAAA;MACA,KAAAM,UAAA,QAAAD,MAAA;MACA,KAAAF,KAAA;IACA;IACAmB,eAAA;MACA,KAAA5B,SAAA,CAAAmC,SAAA,QAAAnC,SAAA,CAAAoC,YAAA;IACA;IAEAC,cAAA;MACA,KAAA7B,eAAA,uBAAAD,OAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}