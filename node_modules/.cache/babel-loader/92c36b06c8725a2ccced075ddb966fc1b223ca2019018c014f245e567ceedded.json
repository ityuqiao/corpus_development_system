{"ast":null,"code":"import markdownIt from \"markdown-it\";\nimport { getMultiQueryAnswer } from \"@/server/reinforcementLearning\";\nimport { data } from \"./data\";\nimport { Draggable, Container } from \"vue-smooth-dnd\";\nconst applyDrag = (arr, dragResult) => {\n  const {\n    removedIndex,\n    addedIndex,\n    payload\n  } = dragResult;\n  if (removedIndex === null && addedIndex === null) return arr;\n  const result = [...arr];\n  let itemToAdd = payload;\n  if (removedIndex !== null) {\n    itemToAdd = result.splice(removedIndex, 1)[0];\n  }\n  if (addedIndex !== null) {\n    result.splice(addedIndex, 0, itemToAdd);\n  }\n  return result;\n};\nexport default {\n  name: \"sort-answer\",\n  mounted() {\n    this.scrollBox = document.querySelector(\".chatbox\");\n  },\n  data() {\n    return {\n      data,\n      list: [],\n      isGetAnswerLoading: false\n    };\n  },\n  components: {\n    Draggable,\n    Container\n  },\n  computed: {\n    markdownContent() {\n      const md = new markdownIt({\n        html: true,\n        linkify: true,\n        typographer: true\n      });\n      return content => {\n        return md.render(content);\n      };\n    }\n  },\n  methods: {\n    async submit() {\n      if (this.list.length <= 0) {\n        this.$message({\n          message: \"回答为空！\",\n          type: \"warning\"\n        });\n      }\n    },\n    deleteAnswer(index) {\n      this.list.splice(index, 1);\n    },\n    scrollToBottom() {\n      this.scrollBox.scrollTop = this.scrollBox.scrollHeight;\n    },\n    onDrop(dropResult) {\n      this.list = applyDrag(this.list, dropResult);\n    },\n    async getMultiQueryAnswer() {\n      if (this.list.length >= 5) {\n        this.$message({\n          message: \"回答不能超过五条\",\n          type: \"warning\"\n        });\n        return;\n      }\n      this.isGetAnswerLoading = true;\n      try {\n        const {\n          data\n        } = await getMultiQueryAnswer(this.data, this.list);\n        this.list = data.response.sorted_answer_list;\n      } catch (error) {\n        console.log(error);\n        this.$message.error(\"获取回答失败！\");\n      }\n      this.$nextTick(() => {\n        this.scrollToBottom();\n      });\n      this.isGetAnswerLoading = false;\n    }\n  }\n};","map":{"version":3,"names":["markdownIt","getMultiQueryAnswer","data","Draggable","Container","applyDrag","arr","dragResult","removedIndex","addedIndex","payload","result","itemToAdd","splice","name","mounted","scrollBox","document","querySelector","list","isGetAnswerLoading","components","computed","markdownContent","md","html","linkify","typographer","content","render","methods","submit","length","$message","message","type","deleteAnswer","index","scrollToBottom","scrollTop","scrollHeight","onDrop","dropResult","response","sorted_answer_list","error","console","log","$nextTick"],"sources":["src/views/home/components/sortAnswer-cpn.vue"],"sourcesContent":["<template>\r\n\t<div class=\"bgbox\">\r\n\t\t<div class=\"chatbox\">\r\n\t\t\t<p class=\"title\">您获取回答然后排序</p>\r\n\t\t\t<div class=\"chatBG\">\r\n\t\t\t\t<transition-group name=\"log\">\r\n\t\t\t\t\t<div class=\"log\" v-for=\"(item, index) in data\" :key=\"index\">\r\n\t\t\t\t\t\t<img class=\"avatar\" src=\"../../../assets/img/blur-book.jpg\" />\r\n\t\t\t\t\t\t<div class=\"chatContent\">\r\n\t\t\t\t\t\t\t<div class=\"mar\" v-html=\"markdownContent(item.content)\"></div>\r\n\t\t\t\t\t\t\t<!-- {{ item.content }} -->\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</transition-group>\r\n\t\t\t\t<div class=\"simple-page\">\r\n\t\t\t\t\t<Container @drop=\"onDrop\">\r\n\t\t\t\t\t\t<Draggable v-for=\"(item, index) in list\" :key=\"index\">\r\n\t\t\t\t\t\t\t<p class=\"order\">{{ index + 1 }}.</p>\r\n\t\t\t\t\t\t\t<div class=\"draggable-item\">\r\n\t\t\t\t\t\t\t\t<!-- {{ markdownContent(item.content) }} -->\r\n\t\t\t\t\t\t\t\t<div class=\"reset-style\" v-html=\"markdownContent(item.content)\"></div>\r\n\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\tsrc=\"../../../assets/img/shanchu.png\"\r\n\t\t\t\t\t\t\t\t\tclass=\"deleteImg\"\r\n\t\t\t\t\t\t\t\t\t@click=\"deleteAnswer(index)\"\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</Draggable>\r\n\t\t\t\t\t</Container>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<div class=\"btns\">\r\n\t\t\t<el-button\r\n\t\t\t\tclass=\"getBtn\"\r\n\t\t\t\ttype=\"primary\"\r\n\t\t\t\t@click=\"getMultiQueryAnswer\"\r\n\t\t\t\t:loading=\"isGetAnswerLoading\"\r\n\t\t\t\t>获取回答</el-button\r\n\t\t\t>\r\n\t\t\t<!-- <el-button type=\"primary\">主要按钮</el-button> -->\r\n\t\t\t<el-button type=\"primary\" class=\"btnSubmit\" @click=\"submit\"\r\n\t\t\t\t>提交</el-button\r\n\t\t\t>\r\n\t\t</div>\r\n\t</div>\r\n</template>\r\n\r\n<script>\r\n\timport markdownIt from \"markdown-it\";\r\n\timport { getMultiQueryAnswer } from \"@/server/reinforcementLearning\";\r\n\timport { data } from \"./data\";\r\n\timport { Draggable, Container } from \"vue-smooth-dnd\";\r\n\r\n\tconst applyDrag = (arr, dragResult) => {\r\n\t\tconst { removedIndex, addedIndex, payload } = dragResult;\r\n\t\tif (removedIndex === null && addedIndex === null) return arr;\r\n\r\n\t\tconst result = [...arr];\r\n\t\tlet itemToAdd = payload;\r\n\r\n\t\tif (removedIndex !== null) {\r\n\t\t\titemToAdd = result.splice(removedIndex, 1)[0];\r\n\t\t}\r\n\r\n\t\tif (addedIndex !== null) {\r\n\t\t\tresult.splice(addedIndex, 0, itemToAdd);\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t};\r\n\texport default {\r\n\t\tname: \"sort-answer\",\r\n\t\tmounted() {\r\n\t\t\tthis.scrollBox = document.querySelector(\".chatbox\");\r\n\t\t},\r\n\t\tdata() {\r\n\t\t\treturn {\r\n\t\t\t\tdata,\r\n\t\t\t\tlist: [],\r\n\t\t\t\tisGetAnswerLoading: false,\r\n\t\t\t};\r\n\t\t},\r\n\t\tcomponents: {\r\n\t\t\tDraggable,\r\n\t\t\tContainer,\r\n\t\t},\r\n\t\tcomputed: {\r\n\t\t\tmarkdownContent() {\r\n\t\t\t\tconst md = new markdownIt({\r\n\t\t\t\t\thtml: true,\r\n\t\t\t\t\tlinkify: true,\r\n\t\t\t\t\ttypographer: true,\r\n\t\t\t\t});\r\n\t\t\t\treturn (content) => {\r\n\t\t\t\t\treturn md.render(content);\r\n\t\t\t\t};\r\n\t\t\t},\r\n\t\t},\r\n\t\tmethods: {\r\n\t\t\tasync submit() {\r\n\t\t\t\tif (this.list.length <= 0) {\r\n\t\t\t\t\tthis.$message({\r\n\t\t\t\t\t\tmessage: \"回答为空！\",\r\n\t\t\t\t\t\ttype: \"warning\",\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tdeleteAnswer(index) {\r\n\t\t\t\tthis.list.splice(index, 1);\r\n\t\t\t},\r\n\t\t\tscrollToBottom() {\r\n\t\t\t\tthis.scrollBox.scrollTop = this.scrollBox.scrollHeight;\r\n\t\t\t},\r\n\t\t\tonDrop(dropResult) {\r\n\t\t\t\tthis.list = applyDrag(this.list, dropResult);\r\n\t\t\t},\r\n\t\t\tasync getMultiQueryAnswer() {\r\n\t\t\t\tif (this.list.length >= 5) {\r\n\t\t\t\t\tthis.$message({\r\n\t\t\t\t\t\tmessage: \"回答不能超过五条\",\r\n\t\t\t\t\t\ttype: \"warning\",\r\n\t\t\t\t\t});\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tthis.isGetAnswerLoading = true;\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconst { data } = await getMultiQueryAnswer(this.data, this.list);\r\n\t\t\t\t\tthis.list = data.response.sorted_answer_list;\r\n\t\t\t\t} catch (error) {\r\n\t\t\t\t\tconsole.log(error);\r\n\t\t\t\t\tthis.$message.error(\"获取回答失败！\");\r\n\t\t\t\t}\r\n\t\t\t\tthis.$nextTick(() => {\r\n\t\t\t\t\tthis.scrollToBottom();\r\n\t\t\t\t});\r\n\t\t\t\tthis.isGetAnswerLoading = false;\r\n\t\t\t},\r\n\t\t},\r\n\t};\r\n</script>\r\n\r\n<style scoped lang=\"less\">\r\n@import '../../../css/sspai.less';\r\n\r\n.chatbox .title {\r\n\tfont-size: 22px;\r\n\tfont-weight: 700;\r\n\tmargin-left: 30px;\r\n\tmargin-top: 25px;\r\n}\r\n.chatBG {\r\n\tbackground-color: #f7fafc;\r\n\tmargin-left: 20px;\r\n\tborder-radius: 15px;\r\n\tmargin-top: 25px;\r\n\tpadding: 25px 20px;\r\n\tmin-height: 405px;\r\n}\r\n.order {\r\n\tmargin-left: 24px;\r\n\tfont-size: 20px;\r\n}\r\n.deleteImg {\r\n\tposition: absolute;\r\n\twidows: 20px;\r\n\theight: 20px;\r\n\tright: 0;\r\n\tbottom: 0;\r\n\tcursor: pointer;\r\n}\r\n.btns {\r\n\tbackground-color: #fff;\r\n\theight: 120px;\r\n\tborder-radius: 15px;\r\n\tdisplay: flex;\r\n\tjustify-content: flex-end;\r\n\talign-items: center;\r\n\tmargin-top: 50px;\r\n\tmargin-left: 15px;\r\n\tmargin-bottom: 15px;\r\n\tbox-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06);\r\n}\r\n.getBtn {\r\n\tbackground-color: #fff;\r\n\tcolor: #000;\r\n\tfont-weight: 700;\r\n\tfont-size: 20px;\r\n\theight: 50px;\r\n\tmargin-left: 15px;\r\n\tborder: 1px solid #ccc;\r\n}\r\n.btnSubmit {\r\n\theight: 50px;\r\n\tmargin-right: 50px;\r\n\tfont-weight: 700;\r\n\tfont-size: 20px;\r\n}\r\n.draggable-item {\r\n\tposition: relative;\r\n\tpadding: 20px;\r\n\tmin-height: 50px;\r\n\tdisplay: block;\r\n\tbackground-color: #fff;\r\n\toutline: 0;\r\n\tborder: 1px solid rgba(0, 0, 0, 0.125);\r\n\tmargin-bottom: 3px;\r\n\tmargin-top: 2px;\r\n\tmargin-left: 20px;\r\n\tborder-radius: 10px;\r\n}\r\n\r\n.simple-page:hover {\r\n\tcursor: grab;\r\n}\r\n\r\n.log {\r\n\tdisplay: flex;\r\n\tmargin-bottom: 20px;\r\n}\r\n\r\n.log .chatContent {\r\n\tposition: relative;\r\n\tcolor: #000;\r\n\tbackground-color: #dfe8f1;\r\n\tborder: 1px solid #dfe8f1;\r\n\tpadding: 20px;\r\n\tmargin-left: 14px;\r\n\tpadding-bottom: 40px;\r\n\tborder-radius: 15px;\r\n\tfont-size: 22px;\r\n\tmax-width: 900px;\r\n}\r\n\r\n.log .avatar {\r\n\twidth: 35px;\r\n\theight: 35px;\r\n\tborder-radius: 50%;\r\n\tmargin-left: 10px;\r\n\tmargin-top: 5px;\r\n}\r\n\r\n.bgbox {\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tpadding-left: 15px;\r\n}\r\n\r\n.chatbox {\r\n\tpadding-top: 15px;\r\n\tpadding-right: 20px;\r\n\tmargin: 15px;\r\n\tmin-height: 600px;\r\n\tbackground-color: #f1f1f1;\r\n\toverflow-x: hidden;\r\n\tborder-radius: 20px;\r\n\tpadding-bottom: 20px;\r\n\tbox-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06);\r\n}\r\n\r\n.chatbox::-webkit-scrollbar {\r\n\twidth: 5px;\r\n}\r\n\r\n.chatbox::-webkit-scrollbar-thumb {\r\n\tbackground-color: #ccc;\r\n\tborder-radius: 4px;\r\n}\r\n\r\n.chatbox::-webkit-scrollbar-track {\r\n\tbackground-color: #f1f1f1;\r\n}\r\n\r\n.log-enter-active,\r\n.log-leave-active {\r\n\tanimation: appear 0.5s ease;\r\n}\r\n\r\n@keyframes appear {\r\n\t0% {\r\n\t\topacity: 0;\r\n\t\ttransform: translateX(20px) translateY(20px);\r\n\t}\r\n}\r\n</style>"],"mappings":"AAiDA,OAAAA,UAAA;AACA,SAAAC,mBAAA;AACA,SAAAC,IAAA;AACA,SAAAC,SAAA,EAAAC,SAAA;AAEA,MAAAC,SAAA,GAAAA,CAAAC,GAAA,EAAAC,UAAA;EACA;IAAAC,YAAA;IAAAC,UAAA;IAAAC;EAAA,IAAAH,UAAA;EACA,IAAAC,YAAA,aAAAC,UAAA,kBAAAH,GAAA;EAEA,MAAAK,MAAA,OAAAL,GAAA;EACA,IAAAM,SAAA,GAAAF,OAAA;EAEA,IAAAF,YAAA;IACAI,SAAA,GAAAD,MAAA,CAAAE,MAAA,CAAAL,YAAA;EACA;EAEA,IAAAC,UAAA;IACAE,MAAA,CAAAE,MAAA,CAAAJ,UAAA,KAAAG,SAAA;EACA;EAEA,OAAAD,MAAA;AACA;AACA;EACAG,IAAA;EACAC,QAAA;IACA,KAAAC,SAAA,GAAAC,QAAA,CAAAC,aAAA;EACA;EACAhB,KAAA;IACA;MACAA,IAAA;MACAiB,IAAA;MACAC,kBAAA;IACA;EACA;EACAC,UAAA;IACAlB,SAAA;IACAC;EACA;EACAkB,QAAA;IACAC,gBAAA;MACA,MAAAC,EAAA,OAAAxB,UAAA;QACAyB,IAAA;QACAC,OAAA;QACAC,WAAA;MACA;MACA,OAAAC,OAAA;QACA,OAAAJ,EAAA,CAAAK,MAAA,CAAAD,OAAA;MACA;IACA;EACA;EACAE,OAAA;IACA,MAAAC,OAAA;MACA,SAAAZ,IAAA,CAAAa,MAAA;QACA,KAAAC,QAAA;UACAC,OAAA;UACAC,IAAA;QACA;MACA;IACA;IACAC,aAAAC,KAAA;MACA,KAAAlB,IAAA,CAAAN,MAAA,CAAAwB,KAAA;IACA;IACAC,eAAA;MACA,KAAAtB,SAAA,CAAAuB,SAAA,QAAAvB,SAAA,CAAAwB,YAAA;IACA;IACAC,OAAAC,UAAA;MACA,KAAAvB,IAAA,GAAAd,SAAA,MAAAc,IAAA,EAAAuB,UAAA;IACA;IACA,MAAAzC,oBAAA;MACA,SAAAkB,IAAA,CAAAa,MAAA;QACA,KAAAC,QAAA;UACAC,OAAA;UACAC,IAAA;QACA;QACA;MACA;MACA,KAAAf,kBAAA;MACA;QACA;UAAAlB;QAAA,UAAAD,mBAAA,MAAAC,IAAA,OAAAiB,IAAA;QACA,KAAAA,IAAA,GAAAjB,IAAA,CAAAyC,QAAA,CAAAC,kBAAA;MACA,SAAAC,KAAA;QACAC,OAAA,CAAAC,GAAA,CAAAF,KAAA;QACA,KAAAZ,QAAA,CAAAY,KAAA;MACA;MACA,KAAAG,SAAA;QACA,KAAAV,cAAA;MACA;MACA,KAAAlB,kBAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}