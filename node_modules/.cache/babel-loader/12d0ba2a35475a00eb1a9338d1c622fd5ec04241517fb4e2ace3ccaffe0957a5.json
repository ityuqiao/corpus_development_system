{"ast":null,"code":"/**\r\n * Copyright 2013-2015, Facebook, Inc.\r\n * All rights reserved.\r\n *\r\n * This source code is licensed under the BSD-style license found in the\r\n * LICENSE file in the root directory of this source tree. An additional grant\r\n * of patent rights can be found in the PATENTS file in the same directory.\r\n *\r\n * @providesModule isEventSupported\r\n */\n\n'use strict';\n\nvar ExecutionEnvironment = require('./ExecutionEnvironment');\nvar useHasFeature;\nif (ExecutionEnvironment.canUseDOM) {\n  useHasFeature = document.implementation && document.implementation.hasFeature &&\n  // always returns true in newer browsers as per the standard.\n  // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature\n  document.implementation.hasFeature('', '') !== true;\n}\n\n/**\r\n * Checks if an event is supported in the current execution environment.\r\n *\r\n * NOTE: This will not work correctly for non-generic events such as `change`,\r\n * `reset`, `load`, `error`, and `select`.\r\n *\r\n * Borrows from Modernizr.\r\n *\r\n * @param {string} eventNameSuffix Event name, e.g. \"click\".\r\n * @param {?boolean} capture Check if the capture phase is supported.\r\n * @return {boolean} True if the event is supported.\r\n * @internal\r\n * @license Modernizr 3.0.0pre (Custom Build) | MIT\r\n */\nfunction isEventSupported(eventNameSuffix, capture) {\n  if (!ExecutionEnvironment.canUseDOM || capture && !('addEventListener' in document)) {\n    return false;\n  }\n  var eventName = 'on' + eventNameSuffix;\n  var isSupported = (eventName in document);\n  if (!isSupported) {\n    var element = document.createElement('div');\n    element.setAttribute(eventName, 'return;');\n    isSupported = typeof element[eventName] === 'function';\n  }\n  if (!isSupported && useHasFeature && eventNameSuffix === 'wheel') {\n    // This is the only way to test support for the `wheel` event in IE9+.\n    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');\n  }\n  return isSupported;\n}\nmodule.exports = isEventSupported;","map":{"version":3,"names":["ExecutionEnvironment","require","useHasFeature","canUseDOM","document","implementation","hasFeature","isEventSupported","eventNameSuffix","capture","eventName","isSupported","element","createElement","setAttribute","module","exports"],"sources":["C:/Users/居文韬/source/repos/corpus_development_system/node_modules/normalize-wheel/src/isEventSupported.js"],"sourcesContent":["/**\r\n * Copyright 2013-2015, Facebook, Inc.\r\n * All rights reserved.\r\n *\r\n * This source code is licensed under the BSD-style license found in the\r\n * LICENSE file in the root directory of this source tree. An additional grant\r\n * of patent rights can be found in the PATENTS file in the same directory.\r\n *\r\n * @providesModule isEventSupported\r\n */\r\n\r\n'use strict';\r\n\r\nvar ExecutionEnvironment = require('./ExecutionEnvironment');\r\n\r\nvar useHasFeature;\r\nif (ExecutionEnvironment.canUseDOM) {\r\n  useHasFeature =\r\n    document.implementation &&\r\n    document.implementation.hasFeature &&\r\n    // always returns true in newer browsers as per the standard.\r\n    // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature\r\n    document.implementation.hasFeature('', '') !== true;\r\n}\r\n\r\n/**\r\n * Checks if an event is supported in the current execution environment.\r\n *\r\n * NOTE: This will not work correctly for non-generic events such as `change`,\r\n * `reset`, `load`, `error`, and `select`.\r\n *\r\n * Borrows from Modernizr.\r\n *\r\n * @param {string} eventNameSuffix Event name, e.g. \"click\".\r\n * @param {?boolean} capture Check if the capture phase is supported.\r\n * @return {boolean} True if the event is supported.\r\n * @internal\r\n * @license Modernizr 3.0.0pre (Custom Build) | MIT\r\n */\r\nfunction isEventSupported(eventNameSuffix, capture) {\r\n  if (!ExecutionEnvironment.canUseDOM ||\r\n      capture && !('addEventListener' in document)) {\r\n    return false;\r\n  }\r\n\r\n  var eventName = 'on' + eventNameSuffix;\r\n  var isSupported = eventName in document;\r\n\r\n  if (!isSupported) {\r\n    var element = document.createElement('div');\r\n    element.setAttribute(eventName, 'return;');\r\n    isSupported = typeof element[eventName] === 'function';\r\n  }\r\n\r\n  if (!isSupported && useHasFeature && eventNameSuffix === 'wheel') {\r\n    // This is the only way to test support for the `wheel` event in IE9+.\r\n    isSupported = document.implementation.hasFeature('Events.wheel', '3.0');\r\n  }\r\n\r\n  return isSupported;\r\n}\r\n\r\nmodule.exports = isEventSupported;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,IAAIA,oBAAoB,GAAGC,OAAO,CAAC,wBAAwB,CAAC;AAE5D,IAAIC,aAAa;AACjB,IAAIF,oBAAoB,CAACG,SAAS,EAAE;EAClCD,aAAa,GACXE,QAAQ,CAACC,cAAc,IACvBD,QAAQ,CAACC,cAAc,CAACC,UAAU;EAClC;EACA;EACAF,QAAQ,CAACC,cAAc,CAACC,UAAU,CAAC,EAAE,EAAE,EAAE,CAAC,KAAK,IAAI;AACvD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,gBAAgBA,CAACC,eAAe,EAAEC,OAAO,EAAE;EAClD,IAAI,CAACT,oBAAoB,CAACG,SAAS,IAC/BM,OAAO,IAAI,EAAE,kBAAkB,IAAIL,QAAQ,CAAC,EAAE;IAChD,OAAO,KAAK;EACd;EAEA,IAAIM,SAAS,GAAG,IAAI,GAAGF,eAAe;EACtC,IAAIG,WAAW,IAAGD,SAAS,IAAIN,QAAQ;EAEvC,IAAI,CAACO,WAAW,EAAE;IAChB,IAAIC,OAAO,GAAGR,QAAQ,CAACS,aAAa,CAAC,KAAK,CAAC;IAC3CD,OAAO,CAACE,YAAY,CAACJ,SAAS,EAAE,SAAS,CAAC;IAC1CC,WAAW,GAAG,OAAOC,OAAO,CAACF,SAAS,CAAC,KAAK,UAAU;EACxD;EAEA,IAAI,CAACC,WAAW,IAAIT,aAAa,IAAIM,eAAe,KAAK,OAAO,EAAE;IAChE;IACAG,WAAW,GAAGP,QAAQ,CAACC,cAAc,CAACC,UAAU,CAAC,cAAc,EAAE,KAAK,CAAC;EACzE;EAEA,OAAOK,WAAW;AACpB;AAEAI,MAAM,CAACC,OAAO,GAAGT,gBAAgB"},"metadata":{},"sourceType":"script","externalDependencies":[]}