{"ast":null,"code":"import { getMultiQueryAnswer } from \"@/server/reinforcementLearning\";\nimport { data, list } from \"./data\";\nimport { Draggable, Container } from \"vue-smooth-dnd\";\nconst applyDrag = (arr, dragResult) => {\n  const {\n    removedIndex,\n    addedIndex,\n    payload\n  } = dragResult;\n  if (removedIndex === null && addedIndex === null) return arr;\n  const result = [...arr];\n  let itemToAdd = payload;\n  if (removedIndex !== null) {\n    itemToAdd = result.splice(removedIndex, 1)[0];\n  }\n  if (addedIndex !== null) {\n    result.splice(addedIndex, 0, itemToAdd);\n  }\n  return result;\n};\nexport default {\n  name: \"sort-answer\",\n  mounted() {\n    this.scrollBox = document.querySelector(\".chatbox\");\n  },\n  data() {\n    return {\n      data,\n      list,\n      isGetAnswerLoading: false\n    };\n  },\n  components: {\n    Draggable,\n    Container\n  },\n  methods: {\n    async submit() {},\n    deleteAnswer(index) {\n      this.list.splice(index, 1);\n    },\n    scrollToBottom() {\n      this.scrollBox.scrollTop = this.scrollBox.scrollHeight;\n    },\n    onDrop(dropResult) {\n      this.list = applyDrag(this.list, dropResult);\n    },\n    async getMultiQueryAnswer() {\n      if (this.list.length >= 5) {\n        this.$message({\n          message: \"回答不能超过五条\",\n          type: \"warning\"\n        });\n        return;\n      }\n      this.isGetAnswerLoading = true;\n      try {\n        const {\n          data\n        } = await getMultiQueryAnswer(this.data, this.list);\n        this.list = data.response.sorted_answer_list;\n      } catch (error) {\n        console.log(error);\n      }\n      this.$nextTick(() => {\n        this.scrollToBottom();\n      });\n      this.isGetAnswerLoading = false;\n    }\n  }\n};","map":{"version":3,"names":["getMultiQueryAnswer","data","list","Draggable","Container","applyDrag","arr","dragResult","removedIndex","addedIndex","payload","result","itemToAdd","splice","name","mounted","scrollBox","document","querySelector","isGetAnswerLoading","components","methods","submit","deleteAnswer","index","scrollToBottom","scrollTop","scrollHeight","onDrop","dropResult","length","$message","message","type","response","sorted_answer_list","error","console","log","$nextTick"],"sources":["src/views/home/components/sortAnswer-cpn.vue"],"sourcesContent":["<template>\r\n  <div class=\"bgbox\">\r\n    <div class=\"chatbox\">\r\n      <transition-group name=\"log\">\r\n        <div class=\"log\" v-for=\"(item, index) in data\" :key=\"index\">\r\n          <img class=\"avatar\" src=\"../../../assets/img/blur-book.jpg\" />\r\n          <div\r\n            :class=\"{\r\n              chatContentUser: item.role === 'user',\r\n              chatContentBots: item.role === 'assistant',\r\n              chatContent: true,\r\n            }\"\r\n          >\r\n            {{ item.content }}\r\n          </div>\r\n        </div>\r\n      </transition-group>\r\n      <div class=\"simple-page\">\r\n        <Container @drop=\"onDrop\">\r\n          <Draggable v-for=\"(item, index) in list\" :key=\"index\">\r\n            <div class=\"draggable-item\">\r\n                <p>第{{ index + 1 }}条</p>\r\n              {{ item.content }}\r\n              <img\r\n                src=\"../../../assets/img/shanchu.png\"\r\n                class=\"deleteImg\"\r\n                @click=\"deleteAnswer(index)\"\r\n              />\r\n            </div>\r\n          </Draggable>\r\n        </Container>\r\n      </div>\r\n    </div>\r\n    <div class=\"btns\">\r\n      <el-button\r\n        class=\"getBtn\"\r\n        type=\"primary\"\r\n        @click=\"getMultiQueryAnswer\"\r\n        :loading=\"isGetAnswerLoading\"\r\n        >获取回答</el-button\r\n      >\r\n      <!-- <el-button type=\"primary\">主要按钮</el-button> -->\r\n      <el-button type=\"primary\" class=\"btnSubmit\" @click=\"submit\">提交</el-button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getMultiQueryAnswer } from \"@/server/reinforcementLearning\";\r\nimport { data, list } from \"./data\";\r\nimport { Draggable, Container } from \"vue-smooth-dnd\";\r\n\r\nconst applyDrag = (arr, dragResult) => {\r\n  const { removedIndex, addedIndex, payload } = dragResult;\r\n  if (removedIndex === null && addedIndex === null) return arr;\r\n\r\n  const result = [...arr];\r\n  let itemToAdd = payload;\r\n\r\n  if (removedIndex !== null) {\r\n    itemToAdd = result.splice(removedIndex, 1)[0];\r\n  }\r\n\r\n  if (addedIndex !== null) {\r\n    result.splice(addedIndex, 0, itemToAdd);\r\n  }\r\n\r\n  return result;\r\n};\r\nexport default {\r\n  name: \"sort-answer\",\r\n  mounted() {\r\n    this.scrollBox = document.querySelector(\".chatbox\");\r\n  },\r\n  data() {\r\n    return {\r\n      data,\r\n      list,\r\n      isGetAnswerLoading: false,\r\n    };\r\n  },\r\n  components: {\r\n    Draggable,\r\n    Container,\r\n  },\r\n  methods: {\r\n    async submit() {\r\n\r\n    },\r\n    deleteAnswer(index) {\r\n        this.list.splice(index, 1)\r\n    },\r\n    scrollToBottom() {\r\n      this.scrollBox.scrollTop = this.scrollBox.scrollHeight;\r\n    },\r\n    onDrop(dropResult) {\r\n      this.list = applyDrag(this.list, dropResult);\r\n    },\r\n    async getMultiQueryAnswer() {\r\n      if (this.list.length >= 5) {\r\n        this.$message({\r\n          message: \"回答不能超过五条\",\r\n          type: \"warning\",\r\n        });\r\n        return;\r\n      }\r\n      this.isGetAnswerLoading = true;\r\n      try {\r\n        const { data } = await getMultiQueryAnswer(this.data, this.list);\r\n        this.list = data.response.sorted_answer_list;\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n      this.$nextTick(() => {\r\n        this.scrollToBottom();\r\n      });\r\n      this.isGetAnswerLoading = false;\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.deleteImg {\r\n  position: absolute;\r\n  widows: 20px;\r\n  height: 20px;\r\n  right: 0;\r\n  bottom: 0;\r\n  cursor: pointer;\r\n}\r\n.btns {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-top: 50px;\r\n}\r\n.getBtn {\r\n  margin-left: 15px;\r\n}\r\n.btnSubmit {\r\n  margin-right: 20px;\r\n}\r\n.draggable-item {\r\n  position: relative;\r\n  padding: 20px;\r\n  min-height: 50px;\r\n  display: block;\r\n  background-color: #fff;\r\n  outline: 0;\r\n  border: 1px solid rgba(0, 0, 0, 0.125);\r\n  margin-bottom: 3px;\r\n  margin-top: 2px;\r\n  margin-left: 20px;\r\n  border-radius: 10px;\r\n}\r\n\r\n.simple-page:hover {\r\n  cursor: grab;\r\n}\r\n\r\n.log {\r\n  display: flex;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.log .chatContent {\r\n  position: relative;\r\n  color: #fff;\r\n  background-color: #10aeff;\r\n  border: 1px solid #10aeff;\r\n  padding: 20px;\r\n  margin-top: 20px;\r\n  margin-left: 10px;\r\n  border-radius: 8px;\r\n  font-size: 20px;\r\n}\r\n\r\n.log .chatContentUser {\r\n  color: #fff;\r\n  background-color: #10aeff;\r\n  border: 1px solid #10aeff;\r\n}\r\n\r\n.log .chatContentBots {\r\n  color: #000;\r\n  background-color: #fff;\r\n  border: 1px solid #fff;\r\n}\r\n\r\n.log .avatar {\r\n  width: 35px;\r\n  height: 35px;\r\n  border-radius: 50%;\r\n  margin-left: 10px;\r\n}\r\n\r\n.bgbox {\r\n  width: 100%;\r\n  height: 100%;\r\n  padding-left: 15px;\r\n}\r\n\r\n.chatbox {\r\n  padding-top: 15px;\r\n  padding-right: 20px;\r\n  margin: 15px;\r\n  height: 550px;\r\n  background-color: #f1f1f1;\r\n  overflow-y: auto;\r\n  overflow-x: hidden;\r\n  border-radius: 10px;\r\n}\r\n\r\n.chatbox::-webkit-scrollbar {\r\n  width: 5px;\r\n}\r\n\r\n.chatbox::-webkit-scrollbar-thumb {\r\n  background-color: #ccc;\r\n  border-radius: 4px;\r\n}\r\n\r\n.chatbox::-webkit-scrollbar-track {\r\n  background-color: #f1f1f1;\r\n}\r\n\r\n.log-enter-active,\r\n.log-leave-active {\r\n  animation: appear 0.5s ease;\r\n}\r\n\r\n@keyframes appear {\r\n  0% {\r\n    opacity: 0;\r\n    transform: translateX(20px) translateY(20px);\r\n  }\r\n}\r\n</style>"],"mappings":"AAgDA,SAAAA,mBAAA;AACA,SAAAC,IAAA,EAAAC,IAAA;AACA,SAAAC,SAAA,EAAAC,SAAA;AAEA,MAAAC,SAAA,GAAAA,CAAAC,GAAA,EAAAC,UAAA;EACA;IAAAC,YAAA;IAAAC,UAAA;IAAAC;EAAA,IAAAH,UAAA;EACA,IAAAC,YAAA,aAAAC,UAAA,kBAAAH,GAAA;EAEA,MAAAK,MAAA,OAAAL,GAAA;EACA,IAAAM,SAAA,GAAAF,OAAA;EAEA,IAAAF,YAAA;IACAI,SAAA,GAAAD,MAAA,CAAAE,MAAA,CAAAL,YAAA;EACA;EAEA,IAAAC,UAAA;IACAE,MAAA,CAAAE,MAAA,CAAAJ,UAAA,KAAAG,SAAA;EACA;EAEA,OAAAD,MAAA;AACA;AACA;EACAG,IAAA;EACAC,QAAA;IACA,KAAAC,SAAA,GAAAC,QAAA,CAAAC,aAAA;EACA;EACAjB,KAAA;IACA;MACAA,IAAA;MACAC,IAAA;MACAiB,kBAAA;IACA;EACA;EACAC,UAAA;IACAjB,SAAA;IACAC;EACA;EACAiB,OAAA;IACA,MAAAC,OAAA,GAEA;IACAC,aAAAC,KAAA;MACA,KAAAtB,IAAA,CAAAW,MAAA,CAAAW,KAAA;IACA;IACAC,eAAA;MACA,KAAAT,SAAA,CAAAU,SAAA,QAAAV,SAAA,CAAAW,YAAA;IACA;IACAC,OAAAC,UAAA;MACA,KAAA3B,IAAA,GAAAG,SAAA,MAAAH,IAAA,EAAA2B,UAAA;IACA;IACA,MAAA7B,oBAAA;MACA,SAAAE,IAAA,CAAA4B,MAAA;QACA,KAAAC,QAAA;UACAC,OAAA;UACAC,IAAA;QACA;QACA;MACA;MACA,KAAAd,kBAAA;MACA;QACA;UAAAlB;QAAA,UAAAD,mBAAA,MAAAC,IAAA,OAAAC,IAAA;QACA,KAAAA,IAAA,GAAAD,IAAA,CAAAiC,QAAA,CAAAC,kBAAA;MACA,SAAAC,KAAA;QACAC,OAAA,CAAAC,GAAA,CAAAF,KAAA;MACA;MACA,KAAAG,SAAA;QACA,KAAAd,cAAA;MACA;MACA,KAAAN,kBAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}