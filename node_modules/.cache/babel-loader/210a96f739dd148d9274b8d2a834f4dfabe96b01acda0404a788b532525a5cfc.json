{"ast":null,"code":"// \"Zero\" preset, with nothing enabled. Useful for manual configuring of simple\n// modes. For example, to parse bold/italic only.\n\n'use strict';\n\nmodule.exports = {\n  options: {\n    html: false,\n    // Enable HTML tags in source\n    xhtmlOut: false,\n    // Use '/' to close single tags (<br />)\n    breaks: false,\n    // Convert '\\n' in paragraphs into <br>\n    langPrefix: 'language-',\n    // CSS language prefix for fenced blocks\n    linkify: false,\n    // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer: false,\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019',\n    /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n    maxNesting: 20 // Internal protection, recursion limit\n  },\n\n  components: {\n    core: {\n      rules: ['normalize', 'block', 'inline', 'text_join']\n    },\n    block: {\n      rules: ['paragraph']\n    },\n    inline: {\n      rules: ['text'],\n      rules2: ['balance_pairs', 'fragments_join']\n    }\n  }\n};","map":{"version":3,"names":["module","exports","options","html","xhtmlOut","breaks","langPrefix","linkify","typographer","quotes","highlight","maxNesting","components","core","rules","block","inline","rules2"],"sources":["C:/Users/居文韬/source/repos/corpus_development_system/node_modules/markdown-it/lib/presets/zero.js"],"sourcesContent":["// \"Zero\" preset, with nothing enabled. Useful for manual configuring of simple\r\n// modes. For example, to parse bold/italic only.\r\n\r\n'use strict';\r\n\r\n\r\nmodule.exports = {\r\n  options: {\r\n    html:         false,        // Enable HTML tags in source\r\n    xhtmlOut:     false,        // Use '/' to close single tags (<br />)\r\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\r\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\r\n    linkify:      false,        // autoconvert URL-like texts to links\r\n\r\n    // Enable some language-neutral replacements + quotes beautification\r\n    typographer:  false,\r\n\r\n    // Double + single quotes replacement pairs, when typographer enabled,\r\n    // and smartquotes on. Could be either a String or an Array.\r\n    //\r\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\r\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\r\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\r\n\r\n    // Highlighter function. Should return escaped HTML,\r\n    // or '' if the source string is not changed and should be escaped externaly.\r\n    // If result starts with <pre... internal wrapper is skipped.\r\n    //\r\n    // function (/*str, lang*/) { return ''; }\r\n    //\r\n    highlight: null,\r\n\r\n    maxNesting:   20            // Internal protection, recursion limit\r\n  },\r\n\r\n  components: {\r\n\r\n    core: {\r\n      rules: [\r\n        'normalize',\r\n        'block',\r\n        'inline',\r\n        'text_join'\r\n      ]\r\n    },\r\n\r\n    block: {\r\n      rules: [\r\n        'paragraph'\r\n      ]\r\n    },\r\n\r\n    inline: {\r\n      rules: [\r\n        'text'\r\n      ],\r\n      rules2: [\r\n        'balance_pairs',\r\n        'fragments_join'\r\n      ]\r\n    }\r\n  }\r\n};\r\n"],"mappings":"AAAA;AACA;;AAEA,YAAY;;AAGZA,MAAM,CAACC,OAAO,GAAG;EACfC,OAAO,EAAE;IACPC,IAAI,EAAU,KAAK;IAAS;IAC5BC,QAAQ,EAAM,KAAK;IAAS;IAC5BC,MAAM,EAAQ,KAAK;IAAS;IAC5BC,UAAU,EAAI,WAAW;IAAG;IAC5BC,OAAO,EAAO,KAAK;IAAS;;IAE5B;IACAC,WAAW,EAAG,KAAK;IAEnB;IACA;IACA;IACA;IACA;IACAC,MAAM,EAAE,0BAA0B;IAAE;;IAEpC;IACA;IACA;IACA;IACA;IACA;IACAC,SAAS,EAAE,IAAI;IAEfC,UAAU,EAAI,EAAE,CAAY;EAC9B,CAAC;;EAEDC,UAAU,EAAE;IAEVC,IAAI,EAAE;MACJC,KAAK,EAAE,CACL,WAAW,EACX,OAAO,EACP,QAAQ,EACR,WAAW;IAEf,CAAC;IAEDC,KAAK,EAAE;MACLD,KAAK,EAAE,CACL,WAAW;IAEf,CAAC;IAEDE,MAAM,EAAE;MACNF,KAAK,EAAE,CACL,MAAM,CACP;MACDG,MAAM,EAAE,CACN,eAAe,EACf,gBAAgB;IAEpB;EACF;AACF,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}