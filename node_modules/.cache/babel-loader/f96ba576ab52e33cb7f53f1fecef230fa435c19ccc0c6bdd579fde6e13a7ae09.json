{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n// import { getAnswer } from \"@/server/chatbots\";\nimport { data } from \"./data\";\nexport default {\n  name: \"chatbots-cpn\",\n  mounted() {\n    this.scrollBox = document.querySelector('.chatbox');\n  },\n  data() {\n    return {\n      isEmpty: false,\n      placeholderText: '您可以随便问我一些问题',\n      texts: \"\",\n      data,\n      scrollBox: null,\n      answerChange: true\n    };\n  },\n  methods: {\n    async getAnswer() {\n      // try {\n      //   const data = await getAnswer(this.texts);\n      //   console.log(data);\n      // } catch (error) {\n      //   console.log(error);\n      // }\n      if (this.texts.trim() === '') {\n        this.placeholderText = '请写一下话吧', this.isEmpty = true;\n        return;\n      }\n      this.data.push({\n        \"role\": \"user\",\n        \"content\": this.texts\n      });\n      this.texts = '';\n      this.$nextTick(() => {\n        this.scrollToBottom();\n      });\n    },\n    scrollToBottom() {\n      this.scrollBox.scrollTop = this.scrollBox.scrollHeight;\n    },\n    inputQuestion() {\n      this.placeholderText = '您可以随便问我一些问题', this.isEmpty = false;\n    }\n  }\n};","map":{"version":3,"names":["data","name","mounted","scrollBox","document","querySelector","isEmpty","placeholderText","texts","answerChange","methods","getAnswer","trim","push","$nextTick","scrollToBottom","scrollTop","scrollHeight","inputQuestion"],"sources":["src/views/home/components/chatbots-cpn.vue"],"sourcesContent":["<template>\r\n  <div class=\"bgbox\">\r\n    <div class=\"chatbox\">\r\n      <transition-group name=\"log\">\r\n        <div class=\"log\" v-for=\"(item, index) in data\" :key=\"index\">\r\n          <img class=\"avatar\" src=\"../../../assets/img/blur-book.jpg\" alt=\"\" />\r\n          <div :class=\"{\r\n            chatContentUser: item.role === 'user',\r\n            chatContentBots: item.role === 'assistant',\r\n            chatContent: true,\r\n          }\">\r\n            {{ item.content }}\r\n          </div>\r\n        </div>\r\n      </transition-group>\r\n    </div>\r\n    <div class=\"Inputbox\">\r\n      <input :class=\"{ 'chatInput': true, 'error': isEmpty }\" @input=\"inputQuestion\" v-model=\"texts\" type=\"text\"\r\n        :placeholder=\"placeholderText\" />\r\n      <el-button class=\"gptBtn\" type=\"primary\" @click=\"getAnswer\">获取回答</el-button>\r\n      <el-button type=\"success\">提交</el-button>\r\n    </div>\r\n    <div class=\"answerInput\" v-if=\"answerChange\">\r\n      <el-input clear=\"anser\" type=\"textarea\" v-model=\"answer\"></el-input>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// import { getAnswer } from \"@/server/chatbots\";\r\nimport { data } from \"./data\";\r\n\r\nexport default {\r\n  name: \"chatbots-cpn\",\r\n  mounted() {\r\n    this.scrollBox = document.querySelector('.chatbox')\r\n  },\r\n  data() {\r\n    return {\r\n      isEmpty: false,\r\n      placeholderText: '您可以随便问我一些问题',\r\n      texts: \"\",\r\n      data,\r\n      scrollBox: null,\r\n      answerChange: true\r\n    };\r\n  },\r\n  methods: {\r\n    async getAnswer() {\r\n      // try {\r\n      //   const data = await getAnswer(this.texts);\r\n      //   console.log(data);\r\n      // } catch (error) {\r\n      //   console.log(error);\r\n      // }\r\n      if (this.texts.trim() === '') {\r\n        this.placeholderText = '请写一下话吧',\r\n          this.isEmpty = true\r\n        return\r\n      }\r\n      this.data.push({\r\n        \"role\": \"user\",\r\n        \"content\": this.texts\r\n      },)\r\n      this.texts = ''\r\n      this.$nextTick(() => {\r\n        this.scrollToBottom()\r\n      })\r\n    },\r\n    scrollToBottom() {\r\n      this.scrollBox.scrollTop = this.scrollBox.scrollHeight;\r\n    },\r\n\r\n    inputQuestion() {\r\n      this.placeholderText = '您可以随便问我一些问题',\r\n        this.isEmpty = false\r\n    }\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.log {\r\n  display: flex;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.log .chatContent {\r\n  color: #fff;\r\n  background-color: #10aeff;\r\n  border: 1px solid #10aeff;\r\n  padding: 15px;\r\n  margin-top: 20px;\r\n  margin-left: 10px;\r\n  border-radius: 8px;\r\n  font-size: 20px;\r\n}\r\n\r\n.log .chatContentUser {\r\n  color: #fff;\r\n  background-color: #10aeff;\r\n  border: 1px solid #10aeff;\r\n}\r\n\r\n.log .chatContentBots {\r\n  color: #000;\r\n  background-color: #fff;\r\n  border: 1px solid #fff;\r\n}\r\n\r\n.log .avatar {\r\n  width: 35px;\r\n  height: 35px;\r\n  border-radius: 50%;\r\n  margin-left: 10px;\r\n}\r\n\r\n.bgbox {\r\n  width: 100%;\r\n  height: 100%;\r\n  padding-left: 15px;\r\n  /* border: 3px solid skyblue; */\r\n  /* border-radius: 15px; */\r\n}\r\n\r\n.chatInput {\r\n  width: 800px;\r\n  height: 50px;\r\n  margin-left: 15px;\r\n  padding-left: 30px;\r\n  border: 1px solid #ccc;\r\n  outline: none;\r\n  border-radius: 15px;\r\n  font-size: 20px;\r\n}\r\n\r\n.chatInput::placeholder {\r\n  opacity: 0.5;\r\n}\r\n\r\n.error::placeholder {\r\n  color: red;\r\n}\r\n\r\n\r\n.chatInput:focus {\r\n  border: 1px solid skyblue;\r\n  outline: 1px solid skyblue;\r\n}\r\n\r\n.chatbox {\r\n  padding-top: 15px;\r\n  padding-right: 20px;\r\n  margin: 15px;\r\n  height: 550px;\r\n  background-color: #f1f1f1;\r\n  overflow-y: auto;\r\n  border-radius: 10px;\r\n}\r\n\r\n.chatbox::-webkit-scrollbar {\r\n  width: 5px;\r\n}\r\n\r\n.chatbox::-webkit-scrollbar-thumb {\r\n  background-color: #ccc;\r\n  border-radius: 4px;\r\n}\r\n\r\n.chatbox::-webkit-scrollbar-track {\r\n  background-color: #f1f1f1;\r\n}\r\n\r\n.gptBtn {\r\n  margin-left: 15px;\r\n}\r\n\r\n.log-enter-active,\r\n.log-leave-active {\r\n  animation: appear 0.5s ease;\r\n}\r\n\r\n.log-enter,\r\n.log-leave-to {\r\n  opacity: 0;\r\n}\r\n\r\n@keyframes appear {\r\n  0% {\r\n    opacity: 0;\r\n    transform: translateX(20px) translateY(20px);\r\n  }\r\n  }\r\n</style>"],"mappings":";AA6BA;AACA,SAAAA,IAAA;AAEA;EACAC,IAAA;EACAC,QAAA;IACA,KAAAC,SAAA,GAAAC,QAAA,CAAAC,aAAA;EACA;EACAL,KAAA;IACA;MACAM,OAAA;MACAC,eAAA;MACAC,KAAA;MACAR,IAAA;MACAG,SAAA;MACAM,YAAA;IACA;EACA;EACAC,OAAA;IACA,MAAAC,UAAA;MACA;MACA;MACA;MACA;MACA;MACA;MACA,SAAAH,KAAA,CAAAI,IAAA;QACA,KAAAL,eAAA,aACA,KAAAD,OAAA;QACA;MACA;MACA,KAAAN,IAAA,CAAAa,IAAA;QACA;QACA,gBAAAL;MACA;MACA,KAAAA,KAAA;MACA,KAAAM,SAAA;QACA,KAAAC,cAAA;MACA;IACA;IACAA,eAAA;MACA,KAAAZ,SAAA,CAAAa,SAAA,QAAAb,SAAA,CAAAc,YAAA;IACA;IAEAC,cAAA;MACA,KAAAX,eAAA,kBACA,KAAAD,OAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}